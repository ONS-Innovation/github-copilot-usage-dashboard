{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"GitHub Copilot Usage Dashboard","text":""},{"location":"#overview","title":"Overview","text":"<p>This project contains an AWS Lambda Function which updates the GitHub Copilot dashboard's historic information, stored within an S3 bucket.</p> <p>The Copilot dashboard can be found on the Copilot tab within the Digital Landscape.</p> <p>View the Digital Landscape's repository.</p>"},{"location":"#techstack-overview","title":"Techstack Overview","text":""},{"location":"#architecture-overview","title":"Architecture Overview","text":"<p>This project uses 2 major components:</p> <ul> <li>The Lambda Function</li> <li>The GitHub API Toolkit (stored in another repository - Repository Link)</li> </ul>"},{"location":"#the-lambda-function","title":"The Lambda Function","text":"<p>This component updates the dashboard's historic information, stored within an S3 bucket. The lambda imports the GitHub API Toolkit to get the API response containing the usage information. The script then adds any new data to the existing historic data within the S3 bucket.</p>"},{"location":"#the-github-api-toolkit","title":"The GitHub API Toolkit","text":"<p>This component is an imported library which is shared across multiple GitHub tools. The toolkit allows applications to make authenticated requests to the GitHub API. It is imported and used by both the dashboard and lambda function.</p>"},{"location":"#high-level-data-overview","title":"High Level Data Overview","text":""},{"location":"#endpoint","title":"Endpoint","text":"<p>View docs for the Copilot usage data endpoint.</p>"},{"location":"#historic-data","title":"Historic Data","text":"<p>This section gathers data from AWS S3. The Copilot usage endpoints have a limitation where they only return the last 28 days worth of information. To get around this, the project has an AWS Lambda function which runs weekly and stores data within an S3 bucket.</p>"},{"location":"#getting-started","title":"Getting Started","text":"<p>To setup and use the project, please refer to the README.</p>"},{"location":"documentation/","title":"Documentation","text":"<p>This site uses MkDocs to build its documentation and GitHub Pages for hosting.</p>"},{"location":"documentation/#format","title":"Format","text":"<p>Documentation within this project follows the following pattern:</p> <ul> <li>A <code>README.md</code> for each component</li> <li>A <code>/docs</code> folder for the project</li> </ul> <p>Each <code>README.md</code> should contain:</p> <ul> <li>A description of what the component is/does</li> <li>A list of any prerequisites</li> <li>Setup instructions</li> <li>Execution instructions</li> <li>Deployment instructions</li> </ul> <p>The <code>/docs</code> folder should contain:</p> <ul> <li>A description of what the project is</li> <li>An overview of how the everything fits together in the project</li> <li>An explanation of the tech stack</li> <li>Details of the underlying dataset</li> </ul> <p>A majority of the information should reside within the <code>/docs</code> directory over the <code>README</code>. The <code>README</code>s in this project should be kept for concise instructions on how to use each component. Any detailed explanation should be kept within <code>/docs</code>.</p>"},{"location":"documentation/#getting-mkdocs-setup","title":"Getting MkDocs Setup","text":"<p>In order to build an MkDocs deployment or serve the documentation locally, we need to install MkDocs and its dependencies.</p> <ol> <li> <p>Navigate into the project's root directory.</p> </li> <li> <p>Install MkDocs and its dependencies.</p> </li> </ol> <pre><code>poetry install --only docs\n</code></pre> <ol> <li>You can now use MkDocs. To see a list of commands run the following:</li> </ol> <pre><code>mkdocs --help\n</code></pre>"},{"location":"documentation/#updating-mkdocs-deployment","title":"Updating MkDocs Deployment","text":""},{"location":"documentation/#github-action-to-deploy-documentation","title":"GitHub Action to Deploy Documentation","text":"<p>A GitHub Action is set up to automatically deploy the documentation to GitHub Pages whenever a commit is made to the <code>main</code> branch. This action is triggered by a push event to the <code>main</code> branch and runs the <code>mkdocs gh-deploy</code> command to build and deploy the documentation.</p>"},{"location":"documentation/#manual-deployment","title":"Manual Deployment","text":"<p>If changes are made within <code>/docs</code>, the GitHub Pages deployment will need to be updated. Assuming you have already installed MkDocs and Material for MkDocs, do the following:</p> <ol> <li> <p>Navigate to the project's root directory.</p> </li> <li> <p>Deploy the documentation to GitHub Pages.</p> </li> </ol> <pre><code>mkdocs gh-deploy\n</code></pre> <ol> <li>This will build the documentation and deploy it to the <code>gh-pages</code> branch of your repository. The documentation will be available at <code>https://ONS-Innovation.github.io/&lt;repository-name&gt;/</code>.</li> </ol> <p>Please Note: The <code>gh-deploy</code> command will overwrite the <code>gh-pages</code> branch and make the local changes available on GitHub Pages. Make sure that these changes are appropriate and have been reviewed before deployment.</p>"},{"location":"team_usage/","title":"Copilot Team Usage","text":""},{"location":"team_usage/#overview","title":"Overview","text":"<p>This section of the project leverages GitHub OAuth2 for user authentication, granting access to essential data.</p> <p>The tech stack and UI is the same as the Organization Usage.</p>"},{"location":"team_usage/#requirements-for-team-copilot-usage","title":"Requirements for Team Copilot Usage","text":"<p>To retrieve data, a team must meet the following criteria:</p> <ul> <li>At least 5 members with active Copilot licenses.</li> <li>These 5 users must be active for a minimum of 1 day.</li> </ul>"},{"location":"team_usage/#access","title":"Access","text":""},{"location":"team_usage/#flow-session","title":"Flow &amp; Session","text":"<p>When on the team usage page, a <code>Login with GitHub</code> is displayed. Once clicked on, the user is taken to GitHub's authorisation page. The permissions read-only personal user data and read-only organizations and teams are required for this application. Clicking on the green <code>Authorize</code> button takes the user back to the application.</p> <p>The session is saved to streamlit's <code>session_state</code>. For security, the session resets after refresh but not when navigating between pages. This means the user has to press the <code>Login with GitHub</code> button each page refresh.</p>"},{"location":"team_usage/#types-of-access","title":"Types of Access","text":""},{"location":"team_usage/#regular-user","title":"Regular User","text":"<p>A user within ONSDigital. Upon authentication, the app identifies the teams they belong to and populates the selection box accordingly. If the user is part of a qualifying team, they can view the data. Users not associated with any team cannot select teams.</p>"},{"location":"team_usage/#admin-user","title":"Admin User","text":"<p>An enhanced regular user with the ability to search for any team. This user belongs to a specific whitelisted team, enabling them to view metrics for any team that meets the Copilot usage data requirements.</p>"},{"location":"team_usage/#metrics","title":"Metrics","text":""},{"location":"team_usage/#team-history-metrics","title":"Team History Metrics","text":"<p>The team history metrics function retrieves historical usage data for each team identified with Copilot usage. This data includes detailed metrics about the team's activity over time. New data for a team is fetched only from the last captured date in the file.</p>"},{"location":"team_usage/#functionality","title":"Functionality","text":"<ul> <li>Input: The function in addition to the GitHub Client takes a team name, organisation and the optional \"since\" as a query parameter as input.</li> <li>Process:</li> <li>Fetches historical data for the specified team using the GitHub API.</li> <li>If the since query parameter exist then fetch data only after the specified date.</li> <li>Filters and organizes the data into a structured format.</li> <li>Output: A JSON object containing the team's historical metrics, including:</li> <li>Team name</li> <li>Activity data</li> <li>Copilot usage statistics</li> </ul>"},{"location":"team_usage/#usage","title":"Usage","text":"<p>The historical metrics are stored in an S3 bucket as a json file (<code>teams_history.json</code>).</p>"},{"location":"team_usage/#example","title":"Example","text":"<p>For a team named <code>kehdev</code>, the historical metrics might include:</p> <pre><code>{\n  \"team\": {\n    \"name\": \"kehdev\",\n    \"slug\": \"kehdev\",\n    \"description\": \"Team responsible for CI/CD pipelines\",\n    \"url\": \"https://github.com/orgs/&lt;organisation&gt;/teams/kehdev\"\n  },\n  \"data\": [\n    {\n      \"date\": \"2025-07-01\",\n      \"active_members\": 10,\n      \"copilot_usage_hours\": 50\n    },\n    {\n      \"date\": \"2025-07-02\",\n      \"active_members\": 12,\n      \"copilot_usage_hours\": 60\n    }\n  ]\n}\n</code></pre>"}]}